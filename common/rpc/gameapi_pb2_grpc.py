# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import common.rpc.gameapi_pb2 as gameapi__pb2


class GameApiStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.registerPlayer = channel.unary_unary(
                '/GameApi/registerPlayer',
                request_serializer=gameapi__pb2.PlayerNameRequest.SerializeToString,
                response_deserializer=gameapi__pb2.RegisterPlayerResponse.FromString,
                )
        self.getPossibleMoves = channel.unary_unary(
                '/GameApi/getPossibleMoves',
                request_serializer=gameapi__pb2.GetPossibleMovesRequest.SerializeToString,
                response_deserializer=gameapi__pb2.GetPossibleMovesResponse.FromString,
                )
        self.getCurrentBoard = channel.unary_unary(
                '/GameApi/getCurrentBoard',
                request_serializer=gameapi__pb2.GetCurrentBoardRequest.SerializeToString,
                response_deserializer=gameapi__pb2.GetCurrentBoardResponse.FromString,
                )
        self.canMove = channel.unary_unary(
                '/GameApi/canMove',
                request_serializer=gameapi__pb2.PlayerNameRequest.SerializeToString,
                response_deserializer=gameapi__pb2.CanMoveResponse.FromString,
                )
        self.move = channel.unary_unary(
                '/GameApi/move',
                request_serializer=gameapi__pb2.MoveRequest.SerializeToString,
                response_deserializer=gameapi__pb2.MoveResponse.FromString,
                )
        self.keepAlive = channel.unary_unary(
                '/GameApi/keepAlive',
                request_serializer=gameapi__pb2.PlayerNameRequest.SerializeToString,
                response_deserializer=gameapi__pb2.KeepAliveResponse.FromString,
                )


class GameApiServicer(object):
    """Missing associated documentation comment in .proto file."""

    def registerPlayer(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getPossibleMoves(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def getCurrentBoard(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def canMove(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def move(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def keepAlive(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GameApiServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'registerPlayer': grpc.unary_unary_rpc_method_handler(
                    servicer.registerPlayer,
                    request_deserializer=gameapi__pb2.PlayerNameRequest.FromString,
                    response_serializer=gameapi__pb2.RegisterPlayerResponse.SerializeToString,
            ),
            'getPossibleMoves': grpc.unary_unary_rpc_method_handler(
                    servicer.getPossibleMoves,
                    request_deserializer=gameapi__pb2.GetPossibleMovesRequest.FromString,
                    response_serializer=gameapi__pb2.GetPossibleMovesResponse.SerializeToString,
            ),
            'getCurrentBoard': grpc.unary_unary_rpc_method_handler(
                    servicer.getCurrentBoard,
                    request_deserializer=gameapi__pb2.GetCurrentBoardRequest.FromString,
                    response_serializer=gameapi__pb2.GetCurrentBoardResponse.SerializeToString,
            ),
            'canMove': grpc.unary_unary_rpc_method_handler(
                    servicer.canMove,
                    request_deserializer=gameapi__pb2.PlayerNameRequest.FromString,
                    response_serializer=gameapi__pb2.CanMoveResponse.SerializeToString,
            ),
            'move': grpc.unary_unary_rpc_method_handler(
                    servicer.move,
                    request_deserializer=gameapi__pb2.MoveRequest.FromString,
                    response_serializer=gameapi__pb2.MoveResponse.SerializeToString,
            ),
            'keepAlive': grpc.unary_unary_rpc_method_handler(
                    servicer.keepAlive,
                    request_deserializer=gameapi__pb2.PlayerNameRequest.FromString,
                    response_serializer=gameapi__pb2.KeepAliveResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'GameApi', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GameApi(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def registerPlayer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/registerPlayer',
            gameapi__pb2.PlayerNameRequest.SerializeToString,
            gameapi__pb2.RegisterPlayerResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getPossibleMoves(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/getPossibleMoves',
            gameapi__pb2.GetPossibleMovesRequest.SerializeToString,
            gameapi__pb2.GetPossibleMovesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def getCurrentBoard(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/getCurrentBoard',
            gameapi__pb2.GetCurrentBoardRequest.SerializeToString,
            gameapi__pb2.GetCurrentBoardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def canMove(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/canMove',
            gameapi__pb2.PlayerNameRequest.SerializeToString,
            gameapi__pb2.CanMoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def move(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/move',
            gameapi__pb2.MoveRequest.SerializeToString,
            gameapi__pb2.MoveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def keepAlive(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/GameApi/keepAlive',
            gameapi__pb2.PlayerNameRequest.SerializeToString,
            gameapi__pb2.KeepAliveResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
